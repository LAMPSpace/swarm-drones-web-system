name: Pineline

on:
    push:
      branches: [master]
jobs:
    changes:
        name: Changes
        runs-on: ubuntu-latest
        outputs:
            api: ${{ steps.changes.outputs.api }}
            frontend: ${{ steps.changes.outputs.frontend }}
        steps:
            - uses: actions/checkout@v3
            - uses: dorny/paths-filter@v2
              id: changes
              with:
                filters: |
                  api:
                    - 'api/**'
                  frontend:
                    - 'frontend/**'
    api-build:
        needs: changes
        if: ${{ needs.changes.outputs.api == 'true' }}
        name: API Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.1'
                extensions: mbstring, zip, pcntl, pdo_mysql
            - name: Install API dependencies
              run: composer install --prefer-dist --no-progress --no-interaction
              working-directory: api
            - name: Copy API .env
              run: cp .env.example .env
              working-directory: api
            - name: Generate API key
              run: php artisan key:generate
              working-directory: api
            - name: Log in to the Container registry
              if: ${{ github.ref == 'refs/heads/master' }}
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.TOKEN }}
            - name: Build and push API Docker image
              if: ${{ github.ref == 'refs/heads/master' }}
              uses: docker/build-push-action@v3
              with:
                context: ./api
                push: true
                tags: ghcr.io/lampspace/sdws-api:latest

    frontend-build:
        needs: changes
        if: ${{ needs.changes.outputs.frontend == 'true' }}
        name: Frontend Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16
            - name: Install frontend dependencies
              run: npm ci
              working-directory: frontend
            - name: Copy frontend .env
              run: cp .env.example .env
              working-directory: frontend
            - name: Build frontend
              run: npm run build
              working-directory: frontend
            - name: Log in to the Container registry
              if: ${{ github.ref == 'refs/heads/master' }}
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.TOKEN }}
            - name: Build and push frontend Docker image
              if: ${{ github.ref == 'refs/heads/master' }}
              uses: docker/build-push-action@v3
              with:
                context: ./frontend
                push: true
                tags: ghcr.io/lampspace/sdws-frontend:latest

    deployment:
        name: Deployment
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Check if API Build exists
              id: api-build-check
              uses: sdras/exists-action@master
              with:
                job-name: api-build
                repo-token: ${{ secrets.TOKEN }}

            - name: Check if Frontend Build exists
              id: frontend-build-check
              uses: sdras/exists-action@master
              with:
                job-name: frontend-build
                repo-token: ${{ secrets.TOKEN }}

            - name: SSH Docker Compose
              if: steps.api-build-check.outputs.exists == 'true' || steps.frontend-build-check.outputs.exists == 'true'
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USERNAME }}
                password: ${{ secrets.SSH_PASSWORD }}
                port: ${{ secrets.SSH_PORT }}
                
                script: |
                    cd /home/ngtrdai/swarm-drones-web-system/
                    git pull
                    cp api/.env.prod api/.env
                    docker-compose down
                    docker-compose up -d