name: Pineline

on:
    push:
      branches: [master]
jobs:
    api-build:
        name: API Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.1'
                extensions: mbstring, zip, pcntl, pdo_mysql
            - name: Install API dependencies
              run: composer install --prefer-dist --no-progress --no-interaction
              working-directory: api
            - name: Copy API .env
              run: cp .env.example .env
              working-directory: api
            - name: Generate API key
              run: php artisan key:generate
              working-directory: api
    frontend-build:
        name: Frontend Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16
            - name: Install frontend dependencies
              run: npm ci
              working-directory: frontend
            - name: Copy frontend .env
              run: cp .env.example .env
              working-directory: frontend
            - name: Build frontend
              run: npm run build
              working-directory: frontend
    deployment:
      name: Deployment
      runs-on: ubuntu-latest
      needs: [api-build, frontend-build]
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: SSH Docker Compose
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            password: ${{ secrets.SSH_PASSWORD }}
            port: ${{ secrets.SSH_PORT }}
            script: |
              cd /home/ngtrdai/swarm-drones-web-system/
              git pull
              cp api/.env.prod api/.env
              cp frontend/.env.prod frontend/.env
              cp nginx/nginx.conf.prod nginx/nginx.conf
              docker-compose down
              docker-compose -f docker-compose-prod.yml build
              docker-compose -f docker-compose-prod.yml up -d